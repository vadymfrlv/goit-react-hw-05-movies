{"version":3,"file":"static/js/Movie Details Page.4e091aa4.chunk.js","mappings":"uKACA,MAA0B,yB,SCQ1B,EANgB,SAAC,GAAD,IAAGA,EAAH,EAAGA,SAAH,OAAkB,gBAAKC,UAAWC,EAAhB,SAAiCF,GAAnD,C,6LCFhB,GAAiB,E,SCyBjB,EAvBkB,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACnB,OACE,iBAAKF,UAAWC,EAAAA,cAAhB,WACE,gBAAKD,UAAWC,EAAAA,IAAYE,IAAKD,EAAKE,IAAKC,IAAKH,EAAKI,MAAOC,OAAO,MAAMC,MAAM,SAC/E,iBAAKR,UAAWC,EAAAA,KAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,UACGC,EAAKI,OACN,kBAAMN,UAAWC,EAAAA,KAAjB,cAAgCC,EAAKO,KAArC,WAEF,eAAGT,UAAWC,EAAAA,MAAd,yBAAyCC,EAAKQ,MAA9C,QACA,eAAIV,UAAWC,EAAAA,SAAf,uBACA,uBAAIC,EAAKS,YACT,eAAIX,UAAWC,EAAAA,OAAf,qBACA,uBAAIC,EAAKU,cAIhB,ECnBD,GAAiB,ECsFjB,EA7EqB,WACnB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAASE,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAO,MACpBC,GAAYC,EAAAA,EAAAA,MAAZD,QAoCR,OAlCAE,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACdJ,EAAaK,QAAb,oBAAuBP,EAASQ,aAAhC,aAAuB,EAAgBC,YAAvC,QAA+C,IAE/C,IAAMC,EAAW,mCAAG,2FAClBX,EAAUF,EAAAA,EAAAA,SADQ,kBAIOc,EAAAA,EAAAA,GAAYP,GAJnB,OAIVQ,EAJU,OAKhBC,EAAcD,GALE,gDAOhBb,EAAUF,EAAAA,EAAAA,UAPM,yDAAH,qDAWXgB,EAAgB,SAAAC,GACpB,IAAMpB,EAASoB,EAAOpB,OAAOqB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrD3B,EAAOuB,EAAM,aAAiBK,MAAM,KAAK,GACzC3B,EAAQ4B,KAAKC,KAA8B,GAAzBP,EAAM,cACxBQ,EAAU,CACdpC,IAAI,mCAAD,OAAqC4B,EAAM,aAC9C1B,MAAO0B,EAAO1B,MACdM,OAAAA,EACAH,KAAAA,EACAC,MAAAA,EACAC,SAAUqB,EAAOrB,UAEnBG,EAAQ0B,GACRvB,EAAUF,EAAAA,EAAAA,SACX,EAEDa,GAED,GAAE,KAGD,UAACa,EAAA,EAAD,WACGzB,IAAWD,EAAAA,EAAAA,UAAwB,SAAC2B,EAAA,EAAD,IAEnC1B,IAAWD,EAAAA,EAAAA,WACV,iCACE,SAAC,KAAD,CAAM4B,GAAIvB,EAAaK,QAASzB,UAAWC,EAAAA,QAA3C,SACG,aAEH,SAAC,EAAD,CAAWC,KAAMA,KACjB,gBAAKF,UAAWC,EAAAA,YAAhB,UACE,gBAAID,UAAWC,EAAAA,KAAf,WACE,eAAID,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CAAS0C,GAAI,OAAQ3C,UAAWC,EAAAA,UAAhC,qBAIF,eAAID,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CAAS0C,GAAI,UAAW3C,UAAWC,EAAAA,UAAnC,6BAMN,SAAC,KAAD,OAIHe,IAAWD,EAAAA,EAAAA,WACV,SAAC6B,EAAA,EAAD,CAAcC,QAAQ,2DAI7B,C","sources":["components/Section/Section.module.css","components/Section/Section.jsx","components/MovieInfo/MovieInfo.module.css","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.module.css","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ children }) => <div className={styles.section}>{children}</div>;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {};","import PropTypes from 'prop-types';\nimport styles from './MovieInfo.module.css';\n\nconst MovieInfo = ({ data }) => {\n  return (\n    <div className={styles.infoContainer}>\n      <img className={styles.img} src={data.img} alt={data.title} height=\"150\" width=\"150\" />\n      <div className={styles.info}>\n        <h2 className={styles.title}>\n          {data.title}\n          <span className={styles.year}>({data.year})</span>\n        </h2>\n        <p className={styles.score}>User score: {data.score}%</p>\n        <h3 className={styles.overview}>Overview</h3>\n        <p>{data.overview}</p>\n        <h3 className={styles.genres}>Genres</h3>\n        <p>{data.genres}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default MovieInfo;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect, useRef } from 'react';\nimport { Link, NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport Section from '../../components/Section';\nimport stateMachine from '../../services/status';\nimport movieAPI from '../../services/movieAPI';\nimport Loader from '../../components/Loader';\nimport Notification from '../../components/Notification';\nimport MovieInfo from '../../components/MovieInfo';\nimport styles from './MovieDetailsPage.module.css';\n\nconst MovieDetails = () => {\n  const [data, setData] = useState([]);\n  const [status, setStatus] = useState(stateMachine.IDLE);\n\n  const location = useLocation();\n  const refContainer = useRef(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    refContainer.current = location.state?.from ?? '/';\n\n    const fetchMovies = async () => {\n      setStatus(stateMachine.PENDING);\n\n      try {\n        const response = await movieAPI.id(movieId);\n        dataTransform(response);\n      } catch (error) {\n        setStatus(stateMachine.REJECTED);\n      }\n    };\n\n    const dataTransform = object => {\n      const genres = object.genres.map(genre => genre.name).join(', ');\n      const year = object['release_date'].split('-')[0];\n      const score = Math.ceil(object['vote_average'] * 10);\n      const newData = {\n        img: `https://image.tmdb.org/t/p/w500/${object['poster_path']}`,\n        title: object.title,\n        genres,\n        year,\n        score,\n        overview: object.overview,\n      };\n      setData(newData);\n      setStatus(stateMachine.RESOLVED);\n    };\n\n    fetchMovies();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Section>\n      {status === stateMachine.PENDING && <Loader />}\n\n      {status === stateMachine.RESOLVED && (\n        <>\n          <Link to={refContainer.current} className={styles.backBtn}>\n            {'Go back'}\n          </Link>\n          <MovieInfo data={data} />\n          <div className={styles.infoSection}>\n            <ul className={styles.list}>\n              <li className={styles.item}>\n                <NavLink to={'cast'} className={styles.additInfo}>\n                  Cast\n                </NavLink>\n              </li>\n              <li className={styles.item}>\n                <NavLink to={'reviews'} className={styles.additInfo}>\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n\n      {status === stateMachine.REJECTED && (\n        <Notification message=\"Oops, something went wrong! Try reloading this page!\" />\n      )}\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["children","className","styles","data","src","img","alt","title","height","width","year","score","overview","genres","useState","setData","stateMachine","status","setStatus","location","useLocation","refContainer","useRef","movieId","useParams","useEffect","current","state","from","fetchMovies","movieAPI","response","dataTransform","object","map","genre","name","join","split","Math","ceil","newData","Section","Loader","to","Notification","message"],"sourceRoot":""}