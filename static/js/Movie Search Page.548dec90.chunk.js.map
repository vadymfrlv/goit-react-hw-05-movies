{"version":3,"file":"static/js/Movie Search Page.548dec90.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.jsx","components/Section/Section.module.css","components/Section/Section.jsx","components/SearchForm/SearchForm.module.css","components/SearchForm/SearchForm.jsx","pages/MovieSearchPage/MovieSearchPage.module.css","pages/MovieSearchPage/MovieSearchPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listContainer\":\"MoviesList_listContainer__b80jf\",\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\",\"img\":\"MoviesList_img__v4jFC\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './MoviesList.module.css';\n\nconst MoviesList = ({ data, isHomePage }) => {\n  const url = isHomePage ? 'movies/' : '';\n  const location = useLocation();\n\n  return (\n    <div className={styles.listContainer}>\n      <ul className={styles.list}>\n        {data.map(elem => (\n          <li className={styles.item} key={elem.id}>\n            <Link to={`${url}${elem.id}`} state={{ from: location }}>\n              {elem['poster_path'] ? (\n                <img\n                  className={styles.img}\n                  src={`https://image.tmdb.org/t/p/w500/${elem['poster_path']}`}\n                  alt={elem.name}\n                  width=\"150\"\n                  height=\"200\"\n                />\n              ) : (\n                <img\n                  className={styles.img}\n                  src=\"https://raw.githubusercontent.com/vadymfrlv/storage/b4e0abb7f45980d92f3ee2da26a5960181a17f8f/filmoteka/posterholder.jpg\"\n                  alt=\"\"\n                  width=\"150\"\n                  height=\"200\"\n                />\n              )}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.array.isRequired,\n  isHomePage: PropTypes.bool,\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ children }) => <div className={styles.section}>{children}</div>;\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"formBtn\":\"SearchForm_formBtn__0vNuW\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport movieAPI from '../../services/movieAPI';\nimport stateMachine from '../../services/status';\nimport styles from './SearchForm.module.css';\n\nconst SearchForm = ({ setSearch, setData, setStatus }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = evt => {\n    setQuery(evt.target.value.trimStart());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (query === '') {\n      return;\n    }\n    setSearch({ query });\n\n    const fetchMovies = async () => {\n      setStatus(stateMachine.PENDING);\n\n      try {\n        const response = await movieAPI.search(query, 1);\n        setData(response.results);\n        setStatus(stateMachine.RESOLVED);\n        setQuery('');\n      } catch (error) {\n        setStatus(stateMachine.REJECTED);\n      }\n    };\n    fetchMovies();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className={styles.formBtn}></button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  setSearch: PropTypes.func.isRequired,\n  setData: PropTypes.func.isRequired,\n  setStatus: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieSearchPage_title__nNoho\"};","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport movieAPI from '../../services/movieAPI';\nimport stateMachine from '../../services/status';\nimport Section from '../../components/Section';\nimport SearchForm from '../../components/SearchForm';\nimport Loader from '../../components/Loader';\nimport Notification from '../../components/Notification';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport styles from './MovieSearchPage.module.css';\n\nconst MovieSearch = () => {\n  const [search, setSearch] = useSearchParams();\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(stateMachine.IDLE);\n\n  const queryURL = search.get('query') ?? '';\n\n  useEffect(() => {\n    if (queryURL === '') {\n      return;\n    }\n    setPage(1);\n\n    const fetchMovies = async () => {\n      setStatus(stateMachine.PENDING);\n\n      try {\n        const response = await movieAPI.search(queryURL, page);\n        setData(response.results);\n        setStatus(stateMachine.RESOLVED);\n      } catch (error) {\n        setStatus(stateMachine.REJECTED);\n      }\n    };\n    fetchMovies();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Section>\n      <SearchForm setSearch={setSearch} setData={setData} setStatus={setStatus} />\n\n      {status === stateMachine.PENDING && <Loader />}\n\n      {status === stateMachine.RESOLVED && data.length === 0 && (\n        <p className={styles.title}>Nothing was found for \"{queryURL}\"</p>\n      )}\n\n      {status === stateMachine.RESOLVED && data.length > 0 && queryURL !== '' && (\n        <MoviesList data={data} isHomePage={false} />\n      )}\n\n      {status === stateMachine.REJECTED && (\n        <Notification message=\"Oops, something went wrong! Please try again!\" />\n      )}\n    </Section>\n  );\n};\n\nexport default MovieSearch;\n"],"names":["data","url","isHomePage","location","useLocation","className","styles","map","elem","to","id","state","from","src","alt","name","width","height","children","setSearch","setData","setStatus","useState","query","setQuery","onSubmit","evt","preventDefault","fetchMovies","stateMachine","movieAPI","response","results","type","value","onChange","target","trimStart","useSearchParams","search","page","setPage","status","queryURL","get","useEffect","Section","Loader","length","MoviesList","Notification","message"],"sourceRoot":""}